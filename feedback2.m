function [ u ] = feedback2( x,v )
%Second level Non linear state feedback

Dimensions

c=r/(2*b);
phi=(r/(2*b))*(x(3)-x(4));
PHII=[[c*(b*cos(phi)-2*L*sin(phi)),  c*(b*cos(phi)+2*L*sin(phi));...
      c*(b*sin(phi)+2*L*cos(phi)),  c*(b*sin(phi)-2*L*cos(phi));...
                   0             ,               0             ;...
                   0             ,               0             ],...
    [              0             ,               0             ;...
                   0             ,               0             ;...
    -l1*sin(x(5))-l2*sin(x(5)+x(6)),    -l2*sin(x(5)+x(6))     ;...
     l1*cos(x(5))+l2*cos(x(5)+x(6)),     l2*cos(x(5)+x(6))     ]];

dphi=(r/(2*b))*(x(7)-x(8));

PHIDot=[[c*(-b*sin(phi)*dphi-2*L*cos(phi)*dphi),   c*(-b*sin(phi)*dphi+2*L*cos(phi)*dphi);...
      c*(b*cos(phi)*dphi-2*L*sin(phi)*dphi),     c*(b*cos(phi)*dphi+2*L*sin(phi)*dphi);...
                   0             ,               0             ;...
                   0             ,               0             ],...
     [             0             ,               0             ;...
                   0             ,               0             ;...
    -l1*cos(x(5))*x(9)-l2*cos(x(5)+x(6))*(x(9)+x(10)),    -l2*cos(x(5)+x(6))*(x(9)+x(10))     ;...
     -l1*sin(x(5))*x(9)-l2*sin(x(5)+x(6))*(x(9)+x(10)),   -l2*sin(x(5)+x(6))*(x(9)+x(10))     ]];
 
vm=[x(7);x(8);x(9);x(10)];

u=PHII\(v-PHIDot*vm);

end